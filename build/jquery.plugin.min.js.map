{"version":3,"file":"jquery.plugin.min.js","sources":["../src/jquery.plugin.js"],"names":["factory","define","amd","jQuery","$","ClassFactory","Klass","i","max","args","length","apply","this","arguments","extend","prototype","Plugin","Extension","extensionName","instanceProps","parent","extension","__extensions","initExtensions","extensions","$each","name","init","register","elem","options"],"mappings":"CAEE,SAASA,SAEe,kBAAXC,SAAyBA,OAAOC,IAEvCD,QAAQ,UAAWD,SAGnBA,QAAQG,SAGd,SAASC,GAKP,QAASC,gBAGL,QAASC,SACL,IAAI,GAAIC,GAAI,EAAGC,IAAMC,KAAKC,OAAYF,IAAJD,EAASA,IACvCE,KAAKF,GAAGI,MAAMC,KAAMC,WACpBT,EAAEU,QAAO,EAAMR,MAAMS,UAAWN,KAAKF,GAAGQ,WALhD,GAAIN,MAAOI,SASX,OAAOP,OAbXF,EAAEY,OAAS,aACXZ,EAAEY,OAAOC,UAAa,aAetBb,EAAEY,OAAOD,UAAUD,OAAS,SAASI,cAAeC,eAIhD,QAASF,aACLL,KAAKQ,OAASA,OACdhB,EAAEU,OAAOF,KAAMO,eALnB,GACIE,WADAD,OAASR,IAUb,OAFAS,WAAYD,OAAOE,aAAaJ,eAAiBb,aAAaD,EAAEY,OAAOC,UAAWA,YAKtFb,EAAEY,OAAOD,UAAUQ,eAAiB,WAChC,GAAIC,YAAaZ,KAAKU,YAEtBG,OAAMD,WAAY,SAASE,MACvBd,KAAKU,aAAaI,MAAMC,UAIhCvB,EAAEY,OAAOY,SAAW,SAAST,eACzB,QAASH,QAAOa,KAAMC,SAClB1B,EAAEU,OAAOF,KAAMO,eACXP,KAAKe,MAAQf,KAAKe,KAAKE,KAAMC,SAKrC,MAFAd,QAAOD,UAAUO,gBAEVjB,aAAaD,EAAEY,OAAQA","sourcesContent":["/* jshint laxcomma: true */\n\n;(function(factory) {\n\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(['jquery'], factory);\n    } else {\n        // Browser globals\n        factory(jQuery);\n    }\n\n}(function($) {\n\n    $.Plugin = function() {};\n    $.Plugin.Extension  = function() {};\n\n    function ClassFactory() {\n        var args = arguments; \n\n        function Klass() {\n            for(var i = 0, max = args.length; i < max; i++) {\n                args[i].apply(this, arguments);\n                $.extend(true, Klass.prototype, args[i].prototype); \n            } \n        }\n\n        return Klass;  \n    }\n\n    $.Plugin.prototype.extend = function(extensionName, instanceProps) {\n        var parent = this\n          , extension; \n\n        function Extension() {\n            this.parent = parent; \n            $.extend(this, instanceProps);\n        }\n\n        extension = parent.__extensions[extensionName] = ClassFactory($.Plugin.Extension, Extension) \n\n        return extension;    \n    };\n\n    $.Plugin.prototype.initExtensions = function() {\n        var extensions = this.__extensions; \n\n        $each(extensions, function(name) {\n            this.__extensions[name].init(); \n        });        \n    };\n\n    $.Plugin.register = function(instanceProps) {\n        function Plugin(elem, options) {\n            $.extend(this, instanceProps); \n            if (this.init) { this.init(elem, options) }; \n        }\n\n        Plugin.prototype.__extensions = {}; \n        \n        return ClassFactory($.Plugin, Plugin); \n    };  \n}));\n\n\n"]}